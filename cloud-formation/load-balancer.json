{
  "Parameters": {
    "AWSStackName": {
      "Type": "String"
    },
    "VpcId": {
      "Type": "String"
    },
    "Subnet1": {
      "Type": "String"
    },
    "Subnet2": {
      "Type": "String"
    },
    "CertificateArn": {
      "Type": "String"
    }
  },
  "Conditions": {
    "HasCertificateArn": {
      "Fn::Not": [{
        "Fn::Equals": ["", { "Ref": "CertificateArn" }]
      }]
    }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {
          "Ref": "AWSStackName"
        },
        "GroupName": {
          "Ref": "AWSStackName"
        },
        "SecurityGroupEgress": [{
          "CidrIp": "0.0.0.0/0",
          "IpProtocol": "-1"
        }],
        "SecurityGroupIngress": [{
          "CidrIp": "0.0.0.0/0",
          "FromPort": 80,
          "IpProtocol": "tcp",
          "ToPort": 80
        }, {
          "CidrIp": "0.0.0.0/0",
          "FromPort": 443,
          "IpProtocol": "tcp",
          "ToPort": 443
        }],
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": {
          "Ref": "AWSStackName"
        },
        "IpAddressType": "ipv4",
        "Scheme": "internet-facing",
        "SecurityGroups": [{
          "Ref": "SecurityGroup"
        }],
        "Subnets": [{
          "Ref": "Subnet1"
        }, {
          "Ref": "Subnet2"
        }],
        "Type": "application"
      }
    },
    "LoadBalancerListener443": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "Certificates": {
          "Fn::If" : [
            "HasCertificateArn",
            [{ "CertificateArn": { "Ref": "CertificateArn" } }],
            { "Ref": "AWS::NoValue" }
          ]
        },
        "DefaultActions": [{
          "Type": "forward",
          "TargetGroupArn": {
            "Ref": "TargetGroup1"
          },
          "Order": 1,
          "ForwardConfig": {
            "TargetGroups": [{
              "TargetGroupArn": {
                "Ref": "TargetGroup1"
              },
              "Weight": 1
            }],
            "TargetGroupStickinessConfig": {
              "Enabled": false
            }
          }
        }],
        "LoadBalancerArn": {
          "Ref": "LoadBalancer"
        },
        "Port": 443,
        "Protocol": {
          "Fn::If" : [
            "HasCertificateArn",
            "HTTPS",
            "HTTP"
          ]
        },
        "SslPolicy": {
          "Fn::If" : [
            "HasCertificateArn",
            "ELBSecurityPolicy-2016-08",
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    },
    "LoadBalancerListener80": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [{
          "Type": "redirect",
          "Order": 1,
          "RedirectConfig": {
            "Protocol": "HTTPS",
            "Port": "443",
            "Host": "#{host}",
            "Path": "/#{path}",
            "Query": "#{query}",
            "StatusCode": "HTTP_301"
          }
        }],
        "LoadBalancerArn": {
          "Ref": "LoadBalancer"
        },
        "Port": 80,
        "Protocol": "HTTP"
      }
    },
    "TargetGroup1": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "-", [
              { "Ref": "AWSStackName" },
              "1"
            ]
          ]
        },
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/",
        "HealthCheckPort": "traffic-port",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "IpAddressType": "ipv4",
        "Matcher": {
          "HttpCode": "200"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "ProtocolVersion": "HTTP1",
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "TargetGroup2": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "-", [
              { "Ref": "AWSStackName" },
              "2"
            ]
          ]
        },
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/",
        "HealthCheckPort": "traffic-port",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "IpAddressType": "ipv4",
        "Matcher": {
          "HttpCode": "200"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "ProtocolVersion": "HTTP1",
        "TargetType": "ip",
        "UnhealthyThresholdCount": 2,
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    }
  },
  "Outputs": {
    "SecurityGroup": {
      "Value": {
        "Ref": "SecurityGroup"
      }
    },
    "TargetGroup1": {
      "Value": {
        "Ref": "TargetGroup1"
      }
    },
    "TargetGroup2": {
      "Value": {
        "Ref": "TargetGroup2"
      }
    }
  }
}
